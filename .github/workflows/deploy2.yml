name: Deploy to Azure from Docker too

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP: aguadamillas_students_1
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: sarwari
  REGISTRY_LOGIN_SERVER: DOCKER_REGISTRY_SERVER_URL
  IMAGE_BASE_NAME: containerRegistryImageName

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Run Bicep linter
        run: az bicep build --file ./key-vault.bicep

      - name: Run Bicep linter
        run: az bicep build --file ./main.bicep

      - name: Azure Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: DOCKER_REGISTRY_SERVER_USERNAME
          password: DOCKER_REGISTRY_SERVER_PASSWORD

      - name: Set Image Version
        id: image-version
        run: echo "IMAGE_VERSION=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{env.REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.IMAGE_VERSION }}
          docker build . -t ${{env.REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest
          docker push ${{env.REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.IMAGE_VERSION }}
          docker push ${{env.REGISTRY_LOGIN_SERVER}}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Dev
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./deploy-dev.bicep
          parameters: ./dev-parameters.json 
          deploymentName: "${{ env.USER_ALIAS }}-dev"
          failOnStdErr: false

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to UAT
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./deploy-uat.bicep
          parameters: ./uat-parameters.json 
          deploymentName: "${{ env.USER_ALIAS }}-uat"
          failOnStdErr: false

  deploy-webapp-dev:
    runs-on: ubuntu-latest
    needs: deploy-dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Dev)
        uses: azure/webapps-deploy@v3
        with:
          app-name: your-dev-web-app-name
          slot-name: dev
          images: |
            registry: ${{ env.REGISTRY_LOGIN_SERVER }}
            repository: ${{ env.IMAGE_BASE_NAME }}
            tag: ${{ needs.build-and-publish.outputs.IMAGE_VERSION }}

  deploy-webapp-uat:
    runs-on: ubuntu-latest
    needs: deploy-uat

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (UAT)
        uses: azure/webapps-deploy@v3
        with:
          app-name: your-uat-web-app-name
          slot-name: uat
          images: |
            registry: ${{ env.REGISTRY_LOGIN_SERVER }}
            repository: ${{ env.IMAGE_BASE_NAME }}
            tag: ${{ needs.build-and-publish.outputs.IMAGE_VERSION }}
