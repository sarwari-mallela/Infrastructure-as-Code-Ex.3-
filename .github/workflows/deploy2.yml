name: Docker Build and Deploy

on:
  workflow_run:
    workflows: ["Deploy to Azure"]
    types:
        - completed

env:
    ACR_USERNAME: 'sarwaricR'
    ACR_PASSWORD: 'GvSuyJ218zWBJmr1uT8Phj4wIxddd1GHcDnGqnYxH4+ACRBMjANw'
    ACR_LOGIN_SERVER: 'https://${containerRegistryName}.azurecr.io'
    IMAGE_VERSION: 'sarwari3IV'   

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: <your-acr-login-server>
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Set image version
        run: echo "::set-env name=IMAGE_VERSION::v1.${{ github.run_number }}"

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/flask-demo:${{ env.IMAGE_VERSION }} .
          docker push ${{ env.ACR_LOGIN_SERVER }}/flask-demo:${{ env.IMAGE_VERSION }}

  deploy-to-webapp:
    runs-on: ubuntu-latest

    needs: build-and-publish

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: <your-web-app-name>
          slot-name: production  # Use 'production' or specify your slot
          images: |
            registry: ${{ env.ACR_LOGIN_SERVER }}
            repository: flask-demo
            tag: ${{ needs.build-and-publish.outputs.IMAGE_VERSION }}
